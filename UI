local lib = {RainbowColorValue = 0, HueSelectionPosition = 0}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local PresetColor = Color3.fromRGB(44, 120, 224)
local CloseBind = Enum.KeyCode.RightControl

local ui = Instance.new("ScreenGui")
ui.Name = "ui"
ui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local function MakeDraggable(topbarobject, object)
	local Dragging = nil
	local DragInput = nil
	local DragStart = nil
	local StartPosition = nil

	local function Update(input)
		local Delta = input.Position - DragStart
		local pos =
			UDim2.new(
				StartPosition.X.Scale,
				StartPosition.X.Offset + Delta.X,
				StartPosition.Y.Scale,
				StartPosition.Y.Offset + Delta.Y
			)
		object.Position = pos
	end

	topbarobject.InputBegan:Connect(
		function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				DragStart = input.Position
				StartPosition = object.Position

				input.Changed:Connect(
					function()
						if input.UserInputState == Enum.UserInputState.End then
							Dragging = false
						end
					end
				)
			end
		end
	)

	topbarobject.InputChanged:Connect(
		function(input)
			if
				input.UserInputType == Enum.UserInputType.MouseMovement or
				input.UserInputType == Enum.UserInputType.Touch
			then
				DragInput = input
			end
		end
	)

	UserInputService.InputChanged:Connect(
		function(input)
			if input == DragInput and Dragging then
				Update(input)
			end
		end
	)
end

function lib:Window(text, preset, closebind)
	
	CloseBind = closebind or Enum.KeyCode.RightControl
	PresetColor = preset or Color3.fromRGB(44, 120, 224)
	fs = false
	local Main = Instance.new("Frame")
	local TabHold = Instance.new("Frame")
	local TabHoldLayout = Instance.new("UIListLayout")
	local Title = Instance.new("TextLabel")
	local TabFolder = Instance.new("Folder")
	local DragFrame = Instance.new("Frame")
	
	Main.Name = "Main"
	Main.Parent = ui
	Main.AnchorPoint = Vector2.new(0.5, 0.5)
	Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	Main.BorderSizePixel = 0
	Main.ClipsDescendants = true
	Main.Position = UDim2.new(0.5, 0, 0.5, 0)
	Main.Size = UDim2.new(0, 0, 0, 0)

	TabHold.Name = "TabHold"
	TabHold.Parent = Main
	TabHold.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabHold.BackgroundTransparency = 1.000
	TabHold.BorderSizePixel = 0
	TabHold.Position = UDim2.new(0.0339285731, 0, 0.147335425, 0)
	TabHold.Size = UDim2.new(0, 107, 0, 254)
	
	TabHoldLayout.Name = "TabHoldLayout"
	TabHoldLayout.Parent = TabHold
	TabHoldLayout.SortOrder = Enum.SortOrder.LayoutOrder
	TabHoldLayout.Padding = UDim.new(0, 11)
	
	Title.Name = "Title"
	Title.Parent = Main
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.Position = UDim2.new(0.0339285731, 0, 0.898926377, 0)
	Title.Size = UDim2.new(0, 62, 0, 23)
	Title.Font = Enum.Font.GothamMedium
	Title.Text = "VAPE LITE"
	Title.TextColor3 = Color3.fromRGB(68, 68, 68)
	Title.TextSize = 12.000
	Title.TextXAlignment = Enum.TextXAlignment.Left

	DragFrame.Name = "DragFrame"
	DragFrame.Parent = Main
	DragFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DragFrame.BackgroundTransparency = 1.000
	DragFrame.BorderSizePixel = 0
	DragFrame.Size = UDim2.new(0, 600, 0, 41)
	
	Main:TweenSize(UDim2.new(0, 600, 0, 400), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
	
	MakeDraggable(DragFrame, Main)
	
	local uitoggled = false
	UserInputService.InputBegan:Connect(
		function(io, p)
			if io.KeyCode == CloseBind then
				if uitoggled == false then
					Main:TweenSize(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quart, .6, true)
					uitoggled = true
					wait(.5)
					knixhub.Enabled = false
				else
					Main:TweenSize(
						UDim2.new(0, 600, 0, 400),
						Enum.EasingDirection.Out,
						Enum.EasingStyle.Quart,
						.6,
						true
					)
					knixhub.Enabled = true
					uitoggled = false
				end
			end
		end
	)
	
	TabFolder.Name = "TabFolder"
	TabFolder.Parent = Main
	
	function lib:ChangePresetColor(toch)
		PresetColor = toch
	end
	
	local tabhold = {}
	function tabhold:Tab(text)
		local TabBtn = Instance.new("TextButton")
		local TabTitle = Instance.new("TextLabel")
		local TabBtnIndicator = Instance.new("Frame")
		local TabBtnIndicatorCorner = Instance.new("UICorner")
		
		TabBtn.Name = "TabBtn"
		TabBtn.Parent = TabHold
		TabBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabBtn.BackgroundTransparency = 1.000
		TabBtn.Size = UDim2.new(0, 107, 0, 21)
		TabBtn.Font = Enum.Font.SourceSans
		TabBtn.Text = ""
		TabBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
		TabBtn.TextSize = 14.000

		TabTitle.Name = "TabTitle"
		TabTitle.Parent = TabBtn
		TabTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabTitle.BackgroundTransparency = 1.000
		TabTitle.BorderColor3 = Color3.fromRGB(27, 42, 53)
		TabTitle.BorderSizePixel = 0
		TabTitle.Size = UDim2.new(0, 62, 0, 21)
		TabTitle.Font = Enum.Font.Gotham
		TabTitle.Text = "Tab 1"
		TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
		TabTitle.TextSize = 14.000
		TabTitle.TextXAlignment = Enum.TextXAlignment.Left

		TabBtnIndicator.Name = "TabBtnIndicator"
		TabBtnIndicator.Parent = TabBtn
		TabBtnIndicator.BackgroundColor3 = PresetColor
		TabBtnIndicator.Position = UDim2.new(0, 0, 1, 0)
		TabBtnIndicator.Size = UDim2.new(0, 13, 0, 2)

		TabBtnIndicatorCorner.Name = "TabBtnIndicatorCorner"
		TabBtnIndicatorCorner.Parent = TabBtnIndicator
		
		coroutine.wrap(
			function()
				while wait() do
					TabBtnIndicator.BackgroundColor3 = PresetColor
				end
			end
		)()
		
		local Tab = Instance.new("ScrollingFrame")
		local TabLayout = Instance.new("UIListLayout")
		
		Tab.Name = "Tab"
		Tab.Parent = TabFolder
		Tab.Active = true
		Tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Tab.BackgroundTransparency = 1.000
		Tab.BorderSizePixel = 0
		Tab.Position = UDim2.new(0.182500005, 0, 0.14699997, 0)
		Tab.Size = UDim2.new(0, 470, 0, 300)
		Tab.ScrollBarThickness = 0

		TabLayout.Name = "TabLayout"
		TabLayout.Parent = Tab
		TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
		TabLayout.Padding = UDim.new(0, 6)
		
		if fs == false then
			fs = true
			TabBtnIndicator.Size = UDim2.new(0, 13, 0, 2)
			TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			Tab.Visible = true
		end

		TabBtn.MouseButton1Click:Connect(
			function()
				for i, v in next, TabFolder:GetChildren() do
					if v.Name == "Tab" then
						v.Visible = false
					end
					Tab.Visible = true
				end
				for i, v in next, TabHold:GetChildren() do
					if v.Name == "TabBtn" then
						v.TabBtnIndicator:TweenSize(
							UDim2.new(0, 0, 0, 2),
							Enum.EasingDirection.Out,
							Enum.EasingStyle.Quart,
							.2,
							true
						)
						TabBtnIndicator:TweenSize(
							UDim2.new(0, 13, 0, 2),
							Enum.EasingDirection.Out,
							Enum.EasingStyle.Quart,
							.2,
							true
						)
						TweenService:Create(
							v.TabTitle,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextColor3 = Color3.fromRGB(150, 150, 150)}
						):Play()
						TweenService:Create(
							TabTitle,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{TextColor3 = Color3.fromRGB(255, 255, 255)}
						):Play()
					end
				end
			end
		)
		local tabcontent = {}
		function tabcontent:Button(text, callback)
			local Button = Instance.new("TextButton")
			local ButtonCorner = Instance.new("UICorner")
			local ButtonTitle = Instance.new("TextLabel")
			
			Button.Name = "Button"
			Button.Parent = Tab
			Button.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			Button.Size = UDim2.new(0, 470, 0, 42)
			Button.AutoButtonColor = false
			Button.Font = Enum.Font.SourceSans
			Button.Text = ""
			Button.TextColor3 = Color3.fromRGB(0, 0, 0)
			Button.TextSize = 14.000

			ButtonCorner.CornerRadius = UDim.new(0, 5)
			ButtonCorner.Name = "ButtonCorner"
			ButtonCorner.Parent = Button

			ButtonTitle.Name = "ButtonTitle"
			ButtonTitle.Parent = Button
			ButtonTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ButtonTitle.BackgroundTransparency = 1.000
			ButtonTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
			ButtonTitle.Size = UDim2.new(0, 187, 0, 42)
			ButtonTitle.Font = Enum.Font.Gotham
			ButtonTitle.Text = "Button"
			ButtonTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			ButtonTitle.TextSize = 14.000
			ButtonTitle.TextXAlignment = Enum.TextXAlignment.Left
			
			Button.MouseEnter:Connect(
				function()
					TweenService:Create(
						Button,
						TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(37, 37, 37)}
					):Play()
				end
			)

			Button.MouseLeave:Connect(
				function()
					TweenService:Create(
						Button,
						TweenInfo.new(.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
						{BackgroundColor3 = Color3.fromRGB(34, 34, 34)}
					):Play()
				end
			)

			Button.MouseButton1Click:Connect(
				function()
					pcall(callback)
				end
			)

			Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
		end
		function tabcontent:Toggle(text, default, callback)
			local toggled = false
			
			local Toggle = Instance.new("TextButton")
			local ToggleCorner = Instance.new("UICorner")
			local ToggleTitle = Instance.new("TextLabel")
			local FrameToggle1 = Instance.new("Frame")
			local FrameToggle1Corner = Instance.new("UICorner")
			local FrameToggle2 = Instance.new("Frame")
			local FrameToggle2ICorner = Instance.new("UICorner")
			local FrameToggle3 = Instance.new("Frame")
			local FrameToggle3Corner = Instance.new("UICorner")
			local FrameToggleCircle = Instance.new("Frame")
			local FrameToggleCircleCorner = Instance.new("UICorner")
			
			Toggle.Name = "Toggle"
			Toggle.Parent = Tab
			Toggle.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			Toggle.Size = UDim2.new(0, 470, 0, 42)
			Toggle.AutoButtonColor = false
			Toggle.Font = Enum.Font.SourceSans
			Toggle.Text = ""
			Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
			Toggle.TextSize = 14.000

			ToggleCorner.CornerRadius = UDim.new(0, 5)
			ToggleCorner.Name = "ToggleCorner"
			ToggleCorner.Parent = Toggle

			ToggleTitle.Name = "ToggleTitle"
			ToggleTitle.Parent = Toggle
			ToggleTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			ToggleTitle.BackgroundTransparency = 1.000
			ToggleTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
			ToggleTitle.Size = UDim2.new(0, 187, 0, 42)
			ToggleTitle.Font = Enum.Font.Gotham
			ToggleTitle.Text = "Toggle"
			ToggleTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			ToggleTitle.TextSize = 14.000
			ToggleTitle.TextXAlignment = Enum.TextXAlignment.Left

			FrameToggle1.Name = "FrameToggle1"
			FrameToggle1.Parent = Toggle
			FrameToggle1.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			FrameToggle1.Position = UDim2.new(0.859504104, 0, 0.285714298, 0)
			FrameToggle1.Size = UDim2.new(0, 37, 0, 18)

			FrameToggle1Corner.Name = "FrameToggle1Corner"
			FrameToggle1Corner.Parent = FrameToggle1

			FrameToggle2.Name = "FrameToggle2"
			FrameToggle2.Parent = FrameToggle1
			FrameToggle2.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			FrameToggle2.Position = UDim2.new(0.0489999987, 0, 0.0930000022, 0)
			FrameToggle2.Size = UDim2.new(0, 33, 0, 14)

			FrameToggle2ICorner.Name = "FrameToggle2ICorner"
			FrameToggle2ICorner.Parent = FrameToggle2

			FrameToggle3.Name = "FrameToggle3"
			FrameToggle3.Parent = FrameToggle1
			FrameToggle3.BackgroundColor3 = PresetColor
			FrameToggle3.BackgroundTransparency = 1.000
			FrameToggle3.Size = UDim2.new(0, 37, 0, 18)

			FrameToggle3Corner.Name = "FrameToggle3Corner"
			FrameToggle3Corner.Parent = FrameToggle3

			FrameToggleCircle.Name = "FrameToggleCircle"
			FrameToggleCircle.Parent = FrameToggle1
			FrameToggleCircle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			FrameToggleCircle.Position = UDim2.new(0.127000004, 0, 0.222000003, 0)
			FrameToggleCircle.Size = UDim2.new(0, 10, 0, 10)

			FrameToggleCircleCorner.Parent = FrameToggleCircle
			
			coroutine.wrap(
				function()
					while wait() do
						FrameToggle3.BackgroundColor3 = PresetColor
					end
				end
			)()

			Toggle.MouseButton1Click:Connect(
				function()
					if toggled == false then
						TweenService:Create(
							Toggle,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 = Color3.fromRGB(37, 37, 37)}
						):Play()
						TweenService:Create(
							FrameToggle1,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 1}
						):Play()
						TweenService:Create(
							FrameToggle2,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 1}
						):Play()
						TweenService:Create(
							FrameToggle3,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 0}
						):Play()
						TweenService:Create(
							FrameToggleCircle,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 = Color3.fromRGB(255, 255, 255)}
						):Play()
						FrameToggleCircle:TweenPosition(
							UDim2.new(0.587, 0, 0.222000003, 0),
							Enum.EasingDirection.Out,
							Enum.EasingStyle.Quart,
							.2,
							true
						)
					else
						TweenService:Create(
							Toggle,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 = Color3.fromRGB(34, 34, 34)}
						):Play()
						TweenService:Create(
							FrameToggle1,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 0}
						):Play()
						TweenService:Create(
							FrameToggle2,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 0}
						):Play()
						TweenService:Create(
							FrameToggle3,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundTransparency = 1}
						):Play()
						TweenService:Create(
							FrameToggleCircle,
							TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
							{BackgroundColor3 = Color3.fromRGB(50, 50, 50)}
						):Play()
						FrameToggleCircle:TweenPosition(
							UDim2.new(0.127000004, 0, 0.222000003, 0),
							Enum.EasingDirection.Out,
							Enum.EasingStyle.Quart,
							.2,
							true
						)
					end
					toggled = not toggled
					pcall(callback, toggled)
				end
			)

			if default == true then
				TweenService:Create(
					Toggle,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 = Color3.fromRGB(37, 37, 37)}
				):Play()
				TweenService:Create(
					FrameToggle1,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 1}
				):Play()
				TweenService:Create(
					FrameToggle2,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 1}
				):Play()
				TweenService:Create(
					FrameToggle3,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundTransparency = 0}
				):Play()
				TweenService:Create(
					FrameToggleCircle,
					TweenInfo.new(.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 = Color3.fromRGB(255, 255, 255)}
				):Play()
				FrameToggleCircle:TweenPosition(
					UDim2.new(0.587, 0, 0.222000003, 0),
					Enum.EasingDirection.Out,
					Enum.EasingStyle.Quart,
					.2,
					true
				)
				toggled = not toggled
			end

			Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
		end
		function tabcontent:Slider(text, min, max, start, callback)
			local dragging = false
			local Slider = Instance.new("TextButton")
			local SliderCorner = Instance.new("UICorner")
			local SliderTitle = Instance.new("TextLabel")
			local SliderValue = Instance.new("TextLabel")
			local SlideFrame = Instance.new("Frame")
			local CurrentValueFrame = Instance.new("Frame")
			local SlideCircle = Instance.new("ImageButton")
			
			Slider.Name = "Slider"
			Slider.Parent = Tab
			Slider.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			Slider.Size = UDim2.new(0, 470, 0, 60)
			Slider.AutoButtonColor = false
			Slider.Font = Enum.Font.SourceSans
			Slider.Text = ""
			Slider.TextColor3 = Color3.fromRGB(0, 0, 0)
			Slider.TextSize = 14.000

			SliderCorner.CornerRadius = UDim.new(0, 5)
			SliderCorner.Name = "SliderCorner"
			SliderCorner.Parent = Slider

			SliderTitle.Name = "SliderTitle"
			SliderTitle.Parent = Slider
			SliderTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SliderTitle.BackgroundTransparency = 1.000
			SliderTitle.Position = UDim2.new(0.035812702, 0, 0, 0)
			SliderTitle.Size = UDim2.new(0, 187, 0, 50)
			SliderTitle.Font = Enum.Font.Gotham
			SliderTitle.Text = "Slider"
			SliderTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			SliderTitle.TextSize = 14.000
			SliderTitle.TextXAlignment = Enum.TextXAlignment.Left

			SliderValue.Name = "SliderValue"
			SliderValue.Parent = Slider
			SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			SliderValue.BackgroundTransparency = 1.000
			SliderValue.BorderSizePixel = 0
			SliderValue.Position = UDim2.new(0.035812702, 0, 0, 0)
			SliderValue.Size = UDim2.new(0, 439, 0, 50)
			SliderValue.Font = Enum.Font.Gotham
			SliderValue.Text = tostring(start and math.floor((start / max) * (max - min) + min) or 0)
			SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
			SliderValue.TextSize = 14.000
			SliderValue.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
			SliderValue.TextXAlignment = Enum.TextXAlignment.Right

			SlideFrame.Name = "SlideFrame"
			SlideFrame.Parent = Slider
			SlideFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			SlideFrame.Position = UDim2.new(0.0342647471, 0, 0.68609184, 0)
			SlideFrame.Size = UDim2.new(0, 434, 0, 3)

			CurrentValueFrame.Name = "CurrentValueFrame"
			CurrentValueFrame.Parent = SlideFrame
			CurrentValueFrame.BackgroundColor3 = PresetColor
			CurrentValueFrame.Size = UDim2.new((start or 0) / max, 0, 0, 3)

			SlideCircle.Name = "SlideCircle"
			SlideCircle.Parent = SlideFrame
			SlideCircle.BackgroundColor3 = PresetColor
			SlideCircle.BackgroundTransparency = 1.000
			SlideCircle.Position = UDim2.new(0, 250, -1.30499995, 0)
			SlideCircle.Size = UDim2.new((start or 0) / max, -6, -1.30499995, 0)
			SlideCircle.Image = "rbxassetid://3570695787"
			SlideCircle.ImageColor3 = PresetColor
			
			coroutine.wrap(
				function()
					while wait() do
						CurrentValueFrame.BackgroundColor3 = PresetColor
						SlideCircle.ImageColor3 = PresetColor
					end
				end
			)()

			local function move(input)
				local pos =
					UDim2.new(
						math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
						-6,
						-1.30499995,
						0
					)
				local pos1 =
					UDim2.new(
						math.clamp((input.Position.X - SlideFrame.AbsolutePosition.X) / SlideFrame.AbsoluteSize.X, 0, 1),
						0,
						0,
						3
					)
				CurrentValueFrame:TweenSize(pos1, "Out", "Sine", 0.1, true)
				SlideCircle:TweenPosition(pos, "Out", "Sine", 0.1, true)
				local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
				SliderValue.Text = tostring(value)
				pcall(callback, value)
			end
			SlideCircle.InputBegan:Connect(
				function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = true
					end
				end
			)
			SlideCircle.InputEnded:Connect(
				function(input)
					if input.UserInputType == Enum.UserInputType.MouseButton1 then
						dragging = false
					end
				end
			)
			game:GetService("UserInputService").InputChanged:Connect(
			function(input)
				if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
					move(input)
				end
			end
			)
			Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
		end
		function tabcontent:Label(text)
			local Label = Instance.new("TextButton")
			local LabelCorner = Instance.new("UICorner")
			local LabelTitle = Instance.new("TextLabel")
			
			Label.Name = "Label"
			Label.Parent = Tab
			Label.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			Label.Size = UDim2.new(0, 470, 0, 42)
			Label.AutoButtonColor = false
			Label.Font = Enum.Font.SourceSans
			Label.Text = ""
			Label.TextColor3 = Color3.fromRGB(0, 0, 0)
			Label.TextSize = 14.000

			LabelCorner.CornerRadius = UDim.new(0, 5)
			LabelCorner.Name = "LabelCorner"
			LabelCorner.Parent = Label

			LabelTitle.Name = "LabelTitle"
			LabelTitle.Parent = Label
			LabelTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			LabelTitle.BackgroundTransparency = 1.000
			LabelTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
			LabelTitle.Size = UDim2.new(0, 187, 0, 42)
			LabelTitle.Font = Enum.Font.Gotham
			LabelTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			LabelTitle.TextSize = 14.000
			LabelTitle.TextXAlignment = Enum.TextXAlignment.Left
			LabelTitle.Text = text
			
			Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
		end
		function tabcontent:Textbox(text, disapper, callback)
			local TextBox = Instance.new("Frame")
			local TextboxTitle = Instance.new("TextLabel")
			local TextboxFrame = Instance.new("Frame")
			local TextboxFrameCorner = Instance.new("UICorner")
			local TextBox = Instance.new("TextBox")
			local TextboxCorner = Instance.new("UICorner")
			
			TextBox.Name = "TextBox"
			TextBox.Parent = Tab
			TextBox.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			TextBox.Size = UDim2.new(0, 470, 0, 42)

			TextboxTitle.Name = "TextboxTitle"
			TextboxTitle.Parent = TextBox
			TextboxTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextboxTitle.BackgroundTransparency = 1.000
			TextboxTitle.Position = UDim2.new(0.035812702, 0, 0, 0)
			TextboxTitle.Size = UDim2.new(0, 265, 0, 42)
			TextboxTitle.Font = Enum.Font.Gotham
			TextboxTitle.Text = "Textbox"
			TextboxTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextboxTitle.TextSize = 14.000
			TextboxTitle.TextXAlignment = Enum.TextXAlignment.Left

			TextboxFrame.Name = "TextboxFrame"
			TextboxFrame.Parent = TextboxTitle
			TextboxFrame.BackgroundColor3 = Color3.fromRGB(37, 37, 37)
			TextboxFrame.Position = UDim2.new(1.28877008, 0, 0.214285716, 0)
			TextboxFrame.Size = UDim2.new(0, 100, 0, 23)

			TextboxFrameCorner.CornerRadius = UDim.new(0, 5)
			TextboxFrameCorner.Name = "TextboxFrameCorner"
			TextboxFrameCorner.Parent = TextboxFrame

			TextBox.Parent = TextboxFrame
			TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextBox.BackgroundTransparency = 1.000
			TextBox.Size = UDim2.new(0, 100, 0, 23)
			TextBox.Font = Enum.Font.Gotham
			TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextBox.TextSize = 14.000
			TextBox.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

			TextboxCorner.CornerRadius = UDim.new(0, 5)
			TextboxCorner.Name = "TextboxCorner"
			TextboxCorner.Parent = TextBox
			
			TextBox.FocusLost:Connect(
				function(ep)
					if ep then
						if #TextBox.Text > 0 then
							pcall(callback, TextBox.Text)
							if disapper then
								TextBox.Text = ""
							end
						end
					end
				end
			)
			Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y)
		end
		function tabcontent:Bind(text, keypreset, callback)
			local binding = false
			local Key = keypreset.Name
			local Bind = Instance.new("TextButton")
			local BindCorner = Instance.new("UICorner")
			local BindTitle = Instance.new("TextLabel")
			local BindText = Instance.new("TextLabel")
			
			Bind.Name = "Bind"
			Bind.Parent = Tab
			Bind.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
			Bind.Size = UDim2.new(0, 470, 0, 42)
			Bind.AutoButtonColor = false
			Bind.Font = Enum.Font.SourceSans
			Bind.Text = ""
			Bind.TextColor3 = Color3.fromRGB(0, 0, 0)
			Bind.TextSize = 14.000

			BindCorner.CornerRadius = UDim.new(0, 5)
			BindCorner.Name = "BindCorner"
			BindCorner.Parent = Bind

			BindTitle.Name = "BindTitle"
			BindTitle.Parent = Bind
			BindTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			BindTitle.BackgroundTransparency = 1.000
			BindTitle.Position = UDim2.new(0.0358126722, 0, 0, 0)
			BindTitle.Size = UDim2.new(0, 187, 0, 42)
			BindTitle.Font = Enum.Font.Gotham
			BindTitle.Text = "Bind"
			BindTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			BindTitle.TextSize = 14.000
			BindTitle.TextXAlignment = Enum.TextXAlignment.Left

			BindText.Name = "BindText"
			BindText.Parent = Bind
			BindText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			BindText.BackgroundTransparency = 1.000
			BindText.BorderColor3 = Color3.fromRGB(27, 42, 53)
			BindText.Position = UDim2.new(0.035812702, 0, 0, 0)
			BindText.Size = UDim2.new(0, 442, 0, 42)
			BindText.Font = Enum.Font.Gotham
			BindText.Text = "RightShift"
			BindText.TextColor3 = Color3.fromRGB(255, 255, 255)
			BindText.TextSize = 14.000
			BindText.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
			BindText.TextXAlignment = Enum.TextXAlignment.Right
			
			Bind.MouseButton1Click:Connect(
				function()
					BindText.Text = "..."
					binding = true
					local inputwait = game:GetService("UserInputService").InputBegan:wait()
					if inputwait.KeyCode.Name ~= "Unknown" then
						BindText.Text = inputwait.KeyCode.Name
						Key = inputwait.KeyCode.Name
						binding = false
					else
						binding = false
					end
				end
			)

			game:GetService("UserInputService").InputBegan:connect(
			function(current, pressed)
				if not pressed then
					if current.KeyCode.Name == Key and binding == false then
						pcall(callback)
					end
				end
			end
			)
		end
		return tabcontent
	end
	return tabhold
end
return lib

